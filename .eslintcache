[{"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\index.js":"1","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\App.js":"2","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\reportWebVitals.js":"3","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\MainMenu.jsx":"4","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\DetailElements\\Footer.jsx":"5","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\DetailElements\\Header.jsx":"6","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\Offers.jsx":"7","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\Hotel.jsx":"8","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\Login\\SignUp.jsx":"9","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\Login\\LogIn.jsx":"10","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\RouteController.jsx":"11","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Containers\\OffersContainer.js":"12","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Redux\\store.js":"13","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Redux\\header-reducer.js":"14","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Redux\\hotel-reducer.js":"15","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Redux\\offers-reducer.js":"16","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Containers\\HotelContainer.js":"17","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Containers\\HeaderContainer.js":"18"},{"size":721,"mtime":1612875115588,"results":"19","hashOfConfig":"20"},{"size":484,"mtime":1612968540555,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":3158,"mtime":1612636052982,"results":"23","hashOfConfig":"20"},{"size":998,"mtime":1609951005935,"results":"24","hashOfConfig":"20"},{"size":2812,"mtime":1612968866486,"results":"25","hashOfConfig":"20"},{"size":15217,"mtime":1612878756992,"results":"26","hashOfConfig":"20"},{"size":4988,"mtime":1612884878728,"results":"27","hashOfConfig":"20"},{"size":8302,"mtime":1611506567148,"results":"28","hashOfConfig":"20"},{"size":4861,"mtime":1611506631212,"results":"29","hashOfConfig":"20"},{"size":840,"mtime":1612885096246,"results":"30","hashOfConfig":"20"},{"size":363,"mtime":1612874730921,"results":"31","hashOfConfig":"20"},{"size":442,"mtime":1612968523865,"results":"32","hashOfConfig":"20"},{"size":249,"mtime":1612968523750,"results":"33","hashOfConfig":"20"},{"size":3801,"mtime":1612884805621,"results":"34","hashOfConfig":"20"},{"size":2187,"mtime":1612884944245,"results":"35","hashOfConfig":"20"},{"size":508,"mtime":1612884267002,"results":"36","hashOfConfig":"20"},{"size":375,"mtime":1612968523920,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"7san8l",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\index.js",["83"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Footer from \"./Components/DetailElements/Footer\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/store\"\nReactDOM.render(\n    <BrowserRouter>\n      <Provider store ={store}>\n    <App/>\n      </Provider>\n    </BrowserRouter>,document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["84","85"],"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\App.js",[],"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\reportWebVitals.js",[],"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\MainMenu.jsx",["86","87"],"import Button from \"@material-ui/core/Button\";\r\nimport {Container, Typography, withStyles} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst style = theme => ({\r\n    tables: {\r\n        marginBottom: 100,\r\n        marginTop: 25\r\n    },\r\n    cardo: {\r\n        marginLeft: 250,\r\n        marginRight: 150\r\n    },\r\n    cardt: {\r\n        marginRight: 250,\r\n        marginLeft: 150\r\n    },\r\n    img: {\r\n        height: 600,\r\n        width: 500\r\n    }\r\n})\r\n\r\nconst MainMenu = props => {\r\n    const {classes} = props\r\n    return (\r\n        <div className={classes.main}>\r\n            <Container maxWidth=\"sm\">\r\n                <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" gutterBottom>Знайдіть місце, куди вам буде\r\n                    комфортніше поїхати, щоб провести новорічні свята</Typography>\r\n                <Grid container direction=\"row\" className={classes.booking}>\r\n                    <TextField id=\"outlined-basic\" label=\"Місто для поїздки\" variant=\"outlined\"/>\r\n                    <TextField id=\"outlined-basic\" label=\"Кількість осіб\" variant=\"outlined\"/>\r\n                    <Button color=\"primary\" variant=\"contained\">\r\n                        <NavLink to=\"/offers\" style={{textDecoration: 'none'}}>\r\n                            Пошук\r\n                        </NavLink>\r\n                    </Button>\r\n                </Grid>\r\n            </Container>\r\n            <div className={classes.tables}>\r\n                <Grid container spacing={10}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Card className={classes.cardo}>\r\n                            <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\">\r\n                                Ваші рекомендації на наступні поїздки\r\n                                <img src=\"https://wallpapershome.ru/images/pages/pic_v/16656.jpg\"\r\n                                     className={classes.img}/>\r\n                            </Typography>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Card className={classes.cardt}>\r\n                            <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\">\r\n                                Де ви були останнього разу?\r\n                                <img\r\n                                    src=\"https://upload.wikimedia.org/wikipedia/commons/c/ca/Vertical_Panorama_of_Facade_-_Ivan_Franko_National_University_-_Lviv_-_Ukraine_-_01_%2826594377953%29_%282%29.jpg\"\r\n                                    className={classes.img}/>\r\n                            </Typography>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(style)(MainMenu);\r\n","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\DetailElements\\Footer.jsx",[],"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\DetailElements\\Header.jsx",["88"],"import {Typography} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport bookingsite from \"../bookingsite.png\";\r\nconst style = theme => ({\r\n    name: {\r\n      marginRight: '10px'\r\n    },\r\n    pap: {\r\n        margin: '10px 5px',\r\n        padding: '5px 15px',\r\n        backgroundColor: '#4169E1',\r\n        color: 'White',\r\n    },\r\n    image: {\r\n        marginTop: '10px',\r\n        height: 60,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    buttons: {\r\n        marginBottom: '10px',\r\n        marginTop: '5px'\r\n    },\r\n    button: {\r\n        marginRight: '5px'\r\n    }\r\n\r\n})\r\n\r\nconst Header = props => {\r\n    const {classes} = props;\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Paper className={classes.pap}>\r\n                    <Grid container>\r\n                       <NavLink to=\"/\">\r\n                        <img src={bookingsite} className={classes.image}/>\r\n                       </NavLink>\r\n                        <Typography className={classes.title}> </Typography>\r\n                        <Box>\r\n                            <Grid container direction=\"column\" justify=\"space-around\" className={classes.button}>\r\n                                <Grid container direction=\"row\" justify=\"space-around\" className={classes.buttons}>\r\n                                    <NavLink to=\"/signup\" style={{textDecoration: 'none'}} >\r\n                                        <Button color=\"primary\" variant=\"contained\">\r\n                                            Sign up\r\n                                        </Button>\r\n                                    </NavLink>\r\n                                    <NavLink to=\"/login\" style={{textDecoration: 'none'}}>\r\n                                        <Button color=\"primary\" variant=\"contained\">\r\n                                            Log in\r\n                                        </Button>\r\n                                    </NavLink>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\" justify=\"center\" >\r\n                                    <Typography className={classes.name}>{props.userData.name}</Typography>\r\n                                    <Typography>{props.userData.subname}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withStyles(style)(Header);\r\n","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\Offers.jsx",["89"],"import {Typography, withStyles} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport React from \"react\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst style = theme => ({\r\n    description: {\r\n        marginLeft: 15,\r\n        marginRight: 20\r\n    },\r\n    stars: {\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    textkm:\r\n        {\r\n            marginTop: 10,\r\n            marginLeft: 20,\r\n            marginBottom: 20,\r\n            marginRight: 30\r\n        },\r\n    textHotel:\r\n        {\r\n            marginTop: 20,\r\n            marginLeft: 20,\r\n            marginBottom: 20,\r\n            marginRight: 30\r\n        },\r\n    images:\r\n        {\r\n            height: 300,\r\n            width: 400,\r\n            marginTop: 20,\r\n            marginLeft: 20,\r\n            marginBottom: 20,\r\n            marginRight: 20\r\n        },\r\n    hotels:\r\n        {\r\n            marginLeft: 10,\r\n\r\n        },\r\n    menuSettings:\r\n        {\r\n\r\n        },\r\n    category:\r\n        {\r\n            marginTop: 20,\r\n            marginLeft: 10,\r\n            marginRight: 10\r\n        },\r\n    centerDistance:\r\n        {\r\n            marginTop: 10,\r\n            marginLeft: 60,\r\n            marginRight: 10\r\n        },\r\n    nightValue:\r\n        {\r\n            marginTop: 10,\r\n            marginLeft: 80,\r\n            marginRight: 10\r\n        },\r\n    slider:\r\n        {\r\n            marginRight: 10,\r\n            marginLeft: 30,\r\n            width: 200\r\n        },\r\n    comfort:\r\n        {\r\n            marginTop: 10,\r\n            marginLeft: 10,\r\n            marginRight: 10\r\n        },\r\n    offers:\r\n        {\r\n            marginLeft: 5\r\n        }\r\n})\r\n\r\n\r\nconst Offers = props => {\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    function pathText(id){\r\n        return \"/hotel/\" + id;\r\n    }\r\n\r\n    function valuetext(value) {\r\n        return `${value}км`;\r\n    }\r\n\r\n    const {classes} = props\r\n    return (\r\n        <div>\r\n            <Grid container direction=\"row\" className={classes.offers}>\r\n                <Grid>\r\n                    <Grid>\r\n                        <Card className={classes.menuSettings}>\r\n                            <Grid className={classes.category}>\r\n                                <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n                                    <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon/>}\r\n                                        aria-controls=\"panel1bh-content\"\r\n                                        id=\"panel1bh-header\"\r\n                                    >\r\n                                        <Typography> Категорії житла</Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                        <FormGroup>\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"apartments\"\r\n                                                                   color=\"primary\"/>}\r\n                                                label=\"Апартаменти/Квартири\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"hostel\"\r\n                                                                   color=\"primary\"/>}\r\n                                                label=\"Готель\"\r\n\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"hotel\"\r\n                                                                   color=\"primary\"/>}\r\n                                                label=\"Хостел\"\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            </Grid>\r\n                            <Grid className={classes.centerDistance}>\r\n                                <Typography variant=\"h7\" align=\"center\" color=\"textPrimary\">\r\n                                    Відстань від центру\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Slider\r\n                                defaultValue={10}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"discrete-slider-custom\"\r\n                                scale={(kilometers) => kilometers + \"км\"}\r\n                                step={1}\r\n                                min={1}\r\n                                max={20}\r\n                                valueLabelDisplay=\"auto\"\r\n                                className={classes.slider}/>\r\n                            <Grid className={classes.comfort}>\r\n                                <Accordion expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n                                    <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon/>}\r\n                                        aria-controls=\"panel2bh-content\"\r\n                                        id=\"panel2bh-header\"\r\n                                    >\r\n                                        <Typography> Зручності</Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                        <FormGroup>\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"Bathroom\"\r\n                                                                   color=\"primary\"/>}\r\n                                                label=\"Ванна\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"breakfast\"\r\n                                                                   color=\"primary\"/>}\r\n                                                label=\"Сніданок у номер\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"SPA\" color=\"primary\"/>}\r\n                                                label=\"СПА\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"Conditioner\"\r\n                                                                   color=\"primary\"/>}\r\n                                                label=\"Кондиціонер\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"viewWindow\"\r\n                                                                   color=\"primary\"/>}\r\n                                                label=\"Вид з вікна\"\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            </Grid>\r\n                            <Grid className={classes.comfort}>\r\n                                <Accordion expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n                                    <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon/>}\r\n                                        aria-controls=\"panel3bh-content\"\r\n                                        id=\"panel3bh-header\"\r\n                                    >\r\n                                        <Typography>Оцінка готелю</Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                        <FormGroup>\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"star\"\r\n                                                                   color=\"primary\"/>}\r\n                                                label=\"1 зірки\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"twostars\"\r\n                                                                   color=\"primary\"/>}\r\n                                                label=\"2 зірки\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"threestars\"\r\n                                                                   color=\"primary\"/>}\r\n                                                label=\"3 зірки\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"fourstars\"\r\n                                                                   color=\"primary\"/>}\r\n                                                label=\"4 зірки\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox onChange={handleChange} name=\"fivestars\"\r\n                                                                   color=\"primary\"/>}\r\n                                                label=\"5 зірок\"\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            </Grid>\r\n                            <Grid className={classes.nightValue}>\r\n                                <Typography variant=\"h7\" align=\"center\" color=\"textPrimary\">\r\n                                    Кошт за ніч\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Slider\r\n                                defaultValue={10}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"discrete-slider-custom\"\r\n                                scale={(dollars) => dollars + \"$\"}\r\n                                step={1}\r\n                                min={10}\r\n                                max={200}\r\n                                valueLabelDisplay=\"auto\"\r\n                                className={classes.slider}/>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                    <Card className={classes.hotels}>\r\n                        <Grid container=\"column\" justify = \"space-around\" spacing = {1}>\r\n                            <div>\r\n                                {\r\n                                    props.offers.map(u => <div key={u.id}>\r\n                            <Grid item xs={9}>\r\n                                <Paper elevation={1}>\r\n                                    <Grid container=\"row\">\r\n                                        <Grid>\r\n                                            <img\r\n                                                src={u.mainImgUrl}\r\n                                                className={classes.images}/>\r\n                                        </Grid>\r\n                                        <Grid>\r\n                                            <Grid container=\"column\">\r\n                                                <NavLink to = {pathText(u.id)} style={{textDecoration: 'none'}}>\r\n                                                    <Typography variant=\"h5\" className={classes.textHotel}>\r\n                                                        {u.nameHotel}\r\n                                                    </Typography>\r\n                                                </NavLink>\r\n                                                <StarBorderIcon color=\"secondary\"\r\n                                                                className={classes.stars}></StarBorderIcon>\r\n                                                <StarBorderIcon color=\"secondary\"\r\n                                                                className={classes.stars}></StarBorderIcon>\r\n                                                <StarBorderIcon color=\"secondary\"\r\n                                                                className={classes.stars}></StarBorderIcon>\r\n                                                <Typography variant=\"h7\" className={classes.textkm}>{u.kilometersCenter} км. до центру\r\n                                                    міста</Typography>\r\n                                            </Grid>\r\n                                            <Typography className={classes.description}>\r\n                                                {u.description}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                                    </div>)\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(style)(Offers);\r\n","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\Hotel.jsx",["90"],"\r\nimport {Typography, withStyles} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport KingBedIcon from '@material-ui/icons/KingBed';\r\n\r\nconst style = theme => ({\r\n    pluses:\r\n        {\r\n            marginBottom: 10,\r\n            marginLeft: 8\r\n        },\r\n    price:\r\n        {\r\n            marginLeft: 50\r\n        },\r\n    numbers: {\r\n        marginBottom: 5\r\n    },\r\n    numberHotel: {\r\n        marginLeft: 10\r\n    },\r\n    cardHotel: {},\r\n    mainHotel: {\r\n        marginTop: 20,\r\n        marginLeft: 30\r\n    },\r\n    images:\r\n        {\r\n            height: 400,\r\n            width: 600,\r\n        },\r\n    textHeading:\r\n        {\r\n            marginLeft: 30,\r\n            marginBottom: 10\r\n        }\r\n})\r\n\r\nconst Hotel = props => {\r\n    const {classes} = props\r\n    return (\r\n        <div>\r\n            <Grid item xs={12}>\r\n                <Card className={classes.cardHotel}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={6} className={classes.mainHotel} align=\"stretch\">\r\n                            <Grid container direction=\"column\">\r\n                                <Grid>\r\n                                    <Typography variant=\"h5\" className={classes.textHeading}>\r\n                                        {props.hotelsPage.hotels[props.id].hotelName}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid>\r\n                                    <img\r\n                                        src={props.hotelsPage.hotels[props.id].mainUrlImg}\r\n                                        className={classes.images}/>\r\n                                </Grid>\r\n                                <Grid>\r\n                                    <Typography variant=\"h6\">\r\n                                        Доступні номери готелю:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid xs={6} className={classes.numbers}>\r\n                                    <Card>\r\n                                        <Grid container direction=\"row\">\r\n                                            <KingBedIcon></KingBedIcon>\r\n                                            <KingBedIcon></KingBedIcon>\r\n                                            <Typography className={classes.numberHotel}>\r\n                                                Двухспальний номер класу Люкс\r\n                                            </Typography>\r\n                                            <Typography className={classes.price}>\r\n                                                Ціна: {props.hotelsPage.hotels[props.id].price2}$\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Card>\r\n                                </Grid>\r\n                                <Grid xs={6} className={classes.numbers}>\r\n                                    <Card>\r\n                                        <Grid container direction=\"row\">\r\n                                            <KingBedIcon></KingBedIcon>\r\n                                            <Typography className={classes.numberHotel}>\r\n                                                Односпальний номер класу Люкс\r\n                                            </Typography>\r\n                                            <Typography className={classes.price}>\r\n                                                Ціна: {props.hotelsPage.hotels[props.id].price}$\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Card>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid xs={4}>\r\n                            <Typography>\r\n                                Налаштування у готелі:\r\n                            </Typography>\r\n                            <Grid container direction=\"column\" className = {classes.pluses}>\r\n                                <Typography>\r\n                                    Кондиціонер\r\n                                </Typography>\r\n                                <Typography>\r\n                                    Холодильник\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Typography>\r\n                                {props.hotelsPage.hotels[props.id].description}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Card>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(style)(Hotel);\r\n",["91","92"],"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\Login\\SignUp.jsx",[],"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Components\\Login\\LogIn.jsx",["93"],"\r\nimport React, {useState} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst style = theme => ({\r\n    paper: {\r\n        margin: '10px 5px',\r\n        padding: '5px',\r\n        color: 'Navy'\r\n    },\r\n    textField: {\r\n        margin: '10px 0px',\r\n    },\r\n    confirmButton: {\r\n        margin: '15px 0px',\r\n        backgroundColor: '#4169E1',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nconst LogIn = props => {\r\n    const {classes} = props\r\n    const [form, setForm] = useState({\r\n        validation: {\r\n            password: '',\r\n            nickname: '',\r\n        }\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        const {validation} = form;\r\n        validation[event.target.name] = event.target.value;\r\n        setForm({validation});\r\n    }\r\n    return (\r\n        <ValidatorForm >\r\n            <Grid item xs={12}>\r\n                <Paper elevation={5} className={classes.paper}>\r\n                    <Typography align={\"center\"}\r\n                                variant={\"h4\"}\r\n                                style={{marginBottom: '5%'}}\r\n                    >\r\n                        Logging in\r\n                    </Typography>\r\n                    <Grid container justify={\"center\"}>\r\n\r\n                        <Grid item xs={12} sm={8} lg={7}>\r\n                            <Typography align={\"center\"} variant=\"overline\" display=\"block\" gutterBottom>Nickname</Typography>\r\n                            <TextValidator variant={\"outlined\"}\r\n                                           fullWidth\r\n                                           inputProps={{style: {padding: '10px', color: 'white'}}}\r\n                                           className={classes.textField}\r\n                                           placeholder='Enter your nickname'\r\n                                           value={form.validation.nickname}\r\n                                           name={'nickname'}\r\n                                           onChange={handleChange}\r\n                                           validators={['minStringLength:2', 'required']}\r\n                                           errorMessages={['Введіть мінімум 2 символи', 'Це поле обов\\'язкове для заповнення']}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} lg={7}>\r\n                            <Typography align={\"center\"} variant=\"overline\" display=\"block\" gutterBottom>Password</Typography>\r\n                            <TextValidator variant={\"outlined\"}\r\n                                           fullWidth\r\n                                           inputProps={{\r\n                                               style: {padding: '10px', color: 'white'},\r\n                                               type: 'password'\r\n                                           }}\r\n                                           className={classes.textField}\r\n                                           placeholder='Enter your password'\r\n                                           value={form.validation.password}\r\n                                           name={'password'}\r\n                                           onChange={handleChange}\r\n                                           validators={['minStringLength:6', 'required']}\r\n                                           errorMessages={['Введіть мінімум 6 символів', 'Це поле обов\\'язкове для заповнення']}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify={\"center\"} alignItems={\"center\"}>\r\n                        <Grid item>\r\n                            <Button className={classes.confirmButton}\r\n                                    variant={\"contained\"}\r\n                                    type={\"submit\"}\r\n                            >\r\n                                LogIn\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify={\"center\"} alignItems={\"center\"}>\r\n                        <Typography style={{marginBottom: '10px'}} variant=\"overline\" display=\"block\" gutterBottom>\r\n                            {\"Don't have an account? \"}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        </ValidatorForm>\r\n    )\r\n}\r\n\r\nexport default withStyles(style)(LogIn);\r\n","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\RouteController.jsx",[],"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Containers\\OffersContainer.js",[],"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Redux\\store.js",[],"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Redux\\header-reducer.js",[],"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Redux\\hotel-reducer.js",[],"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Redux\\offers-reducer.js",[],"C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Containers\\HotelContainer.js",["94","95"],"import {connect} from \"react-redux\";\r\nimport Hotel from \"../Components/Hotel\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport React, {useEffect} from \"react\";\r\n\r\nconst HotelContainer = (props) => {\r\n    {\r\n        return (\r\n            <Hotel {...props}\r\n                id = {props.match.params.id}/>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        hotelsPage: state.hotelsPage,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, )(withRouter(HotelContainer));\r\n\r\n","C:\\Users\\User\\WebstormProjects\\booking_site\\src\\Containers\\HeaderContainer.js",[],{"ruleId":"96","severity":1,"message":"97","line":6,"column":8,"nodeType":"98","messageId":"99","endLine":6,"endColumn":14},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":57,"column":33,"nodeType":"106","endLine":58,"endColumn":63},{"ruleId":"104","severity":1,"message":"105","line":66,"column":33,"nodeType":"106","endLine":68,"endColumn":62},{"ruleId":"104","severity":1,"message":"105","line":45,"column":25,"nodeType":"106","endLine":45,"endColumn":75},{"ruleId":"104","severity":1,"message":"105","line":270,"column":45,"nodeType":"106","endLine":272,"endColumn":77},{"ruleId":"104","severity":1,"message":"105","line":56,"column":37,"nodeType":"106","endLine":58,"endColumn":69},{"ruleId":"100","replacedBy":"107"},{"ruleId":"102","replacedBy":"108"},{"ruleId":"96","severity":1,"message":"109","line":8,"column":9,"nodeType":"98","messageId":"99","endLine":8,"endColumn":16},{"ruleId":"96","severity":1,"message":"110","line":4,"column":16,"nodeType":"98","messageId":"99","endLine":4,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":7,"column":5,"nodeType":"113","messageId":"114","endLine":12,"endColumn":6},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["115"],"no-negated-in-lhs",["116"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["115"],["116"],"'NavLink' is defined but never used.","'useEffect' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]